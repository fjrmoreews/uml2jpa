package gen;

import javax.validation.constraints.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import thewebsemantic.Id;
import thewebsemantic.RdfProperty;
import thewebsemantic.Namespace;
import com.hp.hpl.jena.sparql.vocabulary.FOAF;
import thewebsemantic.binding.Jenabean;
import thewebsemantic.binding.RdfBean;
import uml2rdf.utils.*;
 
[%var allAttributes = aClass.attributes;%]
[%
    var parentSet =aClass.generalization.general.name; 
	var extendsClass="";
 
	if(not parentSet.isEmpty()){  
	   extendsClass+="extends ";
	   extendsClass+=parentSet.get(0).firstToUpperCase();

	} %]
	
 [% var allOperations = aClass.operations; %]
@Namespace("http://inra/pegase#")
public class [%=aClass.name.firstToUpperCase()%] [%=extendsClass%] {
 //declarations
[% for (feature in aClass.features) { %]
   [% if (feature.aggregation.value == 0) { %]
	[%=feature.info()%]
	
	[%=feature.declare()%]
   [% } else { %]
      [% } %]  
[% } %]
//getter
[% for (feature in aClass.features) { %]
   [% if (feature.aggregation.value == 0) { %]
 
	[%=feature.getter()%]
      
   [% } else { %]
      [% } %]
[% } %]
//setter
[% for (feature in aClass.features) { %]
   [% if (feature.aggregation.value == 0) { %]
   
	[%=feature.setter()%]
   [% } else { %]
      [% } %]      
[% } %]
[%for (a in Association.allInstances){%]
	[%if (a.getMemberEnds.aggregation[0].value == 0) { %]
	[% } else { %]

	[%=a.getMemberEnds.visibility[0]%] List<[%=a.getMemberEnds.name[0].firstToUpperCase()%]> [%=a.getMemberEnds.name[0].toLowerCase()%] = new ArrayList<[%=a.getMemberEnds.name[0].firstToUpperCase()%]> ();

//AssociationImpl.getMemberEnds:[%=a.getMemberEnds()%]

	[%}%]
[%}%]
[%for(anOperation in allOperations) { %]

//     [%=anOperation.visibility%]  [%=anOperation.type.name%]  [%=anOperation.name%]() {

[%}%]
}

   [%
  @template
  operation Feature myType() { 
    var attType="Object";
     var typeParentSet ="";
    if (self.type.class.getSimpleName() == "PrimitiveTypeImpl"){
    
      if (self.type.eProxyURI == null){
         attType=self.type.name;
      }else{
          attType=self.type.eProxyURI.fragment();
      }  
      }
    if (self.type.class.getSimpleName() == "ClassImpl"){ 
      attType=self.type.name.firstToUpperCase();
      //typeParentSet =self.type.class.generalization.general.name;
    }    
	%][%=attType%][% }
%]


[%
  @template
  operation Feature getter() { 
    
  %]
    /**
     * Gets the value of [%=self.name%]
     
     class:[%=self.type.class%]
      classS:[%=self.type.class.getSimpleName()%]
      typeToString:[%=self.type%]
      typeName:[%=self.type.name%]
      
      [% if (self.type.class.getSimpleName() == "PrimitiveTypeImpl"){%]
        eProxyURI:[%=self.type.eProxyURI%]
        
        [% 
         if (self.type.eProxyURI == null){
           %]eProxyURI:null[%  
      		}else{
           %]
          nofragment:[%=self.type.eProxyURI.trimFragment()%]
          fragment:[%=self.type.eProxyURI.fragment()%]
           [%
      		}  
        %]
      [%
      } %]
      
     */
public [%=self.correctPrimType()%] get[%=self.name.toLowerCase().firstToUpperCase()%]() {
	return this.[%=self.name.toLowerCase()%];
}
  [% } %]
  
  
   [%
  @template
  operation Feature setter() { %]
    /**
     * Sets the value of [%=self.name%]
     */
public void set[%=self.name.toLowerCase().firstToUpperCase()%]([%=self.correctPrimType()%] [%=self.name.toLowerCase()%]) {
	this.[%=self.name.toLowerCase()%] = [%=self.name.toLowerCase()%];
}
   [% }
%]

 
    [%
    @template
  operation Feature declare() { %]
    /**
     * declaration [%=self.name%]
     */ 
   [%for(prop in self.getRedefinedProperties()){%]
@[%=prop.name%]
	[%}%]
[%=self.visibility%] [%=self.correctPrimType()%] [%=self.name.toLowerCase()%];
   [% }
%]

	[%
	@template
	operation Feature correctPrimType() { 
	var type=""; 
  	 if (self.myType() == "String"){
  	 	type=self.myType();
  	 }
  	 if (self.myType() == "EDate"){
  	 	type=self.myType().substring(1,5).firstToUpperCase();
  	 }
  	 if (self.myType() == "Integer"){
  		type=self.myType().substring(0,7).firstToUpperCase();
 	 }
 	 if (self.myType() == "EDouble") {
  		type=self.myType().substring(1,7).firstToUpperCase();
   	 } 
   	 if (self.myType() == "EFloat") {
  		type=self.myType().substring(1,6).firstToUpperCase();
   	 }
   	 if (self.type.eProxyURI == null) {
  		type=self.myType();
   	 }
   	%][%=type%]
 	[%}%]

    [%
    @template
  operation Feature info() { %]
    /******************
     *0 !!!info [%=self.name%] 
   [%for(prop in self.getRedefinedProperties()){%]
   *1 @[%=prop.name%] KISS
   [%}%]  
   *2 [%=self.visibility%] [%=self.myType()%] [%=self.name%];
   *3 type.name : [%=self.type.name%]
   *4 type.name(proxyURL) : [%=self.type.eProxyURI%] 
   *5 type.class : [%=self.type.class%]
   *6 myType: [%=self.myType()%]
   *7 [% if (self.myType() == "String"){ %]
		[%=self.myType()%]
  	 [% } %]
  	 [% if (self.myType() == "Integer"){ %]
		[%=self.myType().substring(0,3).toLowerCase()%]
  	 [% } %]
  	 [% if (self.myType() == "EFloat"){ %]
		[%=self.myType().substring(1,6).toLowerCase()%]
  	 [% } %]
  	 [% if (self.myType() == "EDouble"){ %]
		[%=self.myType().substring(1,7).toLowerCase()%]
  	 [% } %]
  	 [% if (self.myType() == "EDate"){ %]
		[%=self.myType().substring(1,5).toLowerCase()%]
  	 [% } %]
  	 [% if (self.type.eProxyURI == null){ %]
		class
  	 [% } %]
  	 **
    
   *****************/
   [% } %]
